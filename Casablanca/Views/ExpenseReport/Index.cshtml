@using Casablanca.Models.ExpenseReports;
@using Casablanca.Models.ViewModel;
@using System.Globalization;

@{
    ViewBag.Title = "Mes frais";
}

@model AddExpenseReportVM


<h2 class="text-left">Notes de frais</h2>
<div class="table-responsive">
    <table class="table">
        <thead>
            <tr>
                <th>Mois</th>
                <th>Montant Total</th>
                <th>Nombre de frais</th>
                <th>Statut</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.ExpenseReports) {
                <tr>
                    <td>@item.Month @item.Year</td>
                    <td>@item.TotalCost</td>
                    <td>@item.NbLines</td>
                    <td>
                        @switch (item.Status) {
                            case ExpenseReportStatus.UNSENT:<text>Non envoyée</text>break;
                        case ExpenseReportStatus.REFUSED: <text>Refusée</text>break;
                    case ExpenseReportStatus.APPROVED: <text>Approuvée</text>break;
                case ExpenseReportStatus.PENDING_APPROVAL_1: <text>En attente de première validation</text>break;
            case ExpenseReportStatus.PENDING_APPROVAL_2: <text>En attente de seconde validation</text>break;
    }
                    </td>

					@*Un bouton pour accéder à la note de frais en cours*@
					<td>

						@if (item.Status == ExpenseReportStatus.UNSENT)
						{
							<div>@Html.ActionLink("Modifier", "UpdateExpenseReport", "ExpenseReport", new { id = item.Id }, null) | @Html.ActionLink("Envoyer", "SendExpenseReport", "ExpenseReport", new { id = item.Id }, null)</div>
						}
						else
						{
							@Html.ActionLink("Voir", "ViewExpenseReport", "ExpenseReport", new { ERId = item.Id }, null)
						}
					</td>
                </tr>
            }
        </tbody>
    </table>
</div>



@{
    string current_month = DateTime.Now.ToString("MMMM", new CultureInfo("en-US")).ToUpper();
    string previous_month = DateTime.Now.AddMonths(-1).ToString("MMMM", new CultureInfo("en-US")).ToUpper();
    int current_year = DateTime.Now.Year;

    List<string> months = new List<string> {
previous_month,
current_month
};

    foreach (ExpenseReport er in Model.ExpenseReports) {
        if (er.Year == current_year) {
            if (er.Month.ToString() == current_month) {
                months.Remove(current_month);
            }
            if (er.Month.ToString() == previous_month) {
                months.Remove(previous_month);
            }
        }
        else {
            if (er.Month.ToString() == previous_month) {
                months.Remove(previous_month);
            }
        }
    }
}
@if (months.Count != 0) {
    using (Html.BeginForm("CreateExpenseReport", "ExpenseReport", FormMethod.Post)) {
        <button class="btn btn-primary" type="submit">Créer une note de frais pour le mois</button>
        @Html.DropDownList("monthName", months.Select(month => new SelectListItem {
                                                                   Text = DateTime.ParseExact(month, "MMMM", new CultureInfo("en-US")).ToString("MMMM").ToUpper(),
                                                                   Value = month
                                                               }	))

        @Html.ValidationSummary("");
    }
}